install.packages("twitteR")
library(twitteR)
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumerKey <- "wSPcbJsHVCy2iZDs7npKw"
consumerSecret <- "3xQ4voh6wexIMh25QyoipXE7QzNa6qo5evKng74"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
twitCred$handshake()
load(twitCred.RData)
load(twitCred,file="twitCred.RData")
load(file="twitCred.RData")
BBC1 <- searchTwitter("BBC", n=100)
load("~/twitCred.RData")
fix(twitCred)
BBC1 <- searchTwitter("BBC", n=100)
load("~/twitCred.RData")
BBC1 <- searchTwitter("BBC", n=100)
library(twitteR)
install.packages("twitteR")
library(twitteR)
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumerKey <- "wSPcbJsHVCy2iZDs7npKw"
consumerSecret <- "3xQ4voh6wexIMh25QyoipXE7QzNa6qo5evKng74"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
load("twitCred.RData")
install.packages("ROAuth")
load("twitCred.RData")
xamatTweets <- userTimeline("xamat", n=100)
registerTwitterOAuth(twitCred)
library(twitteR)
load("twitCred.RData")
registerTwitterOAuth(twitCred)
recsys13 <- searchTwitter("#recsys2013",n=1600, since='2013-10-08')
recsys13.df <- twListToDF(recsys13)
log(1.5)
exp(0.4)
exp(0.41)
exp(0.01)
dfsl <- read.csv(file="sl_products_dsdpuc.csv", header = TRUE, stringsAsFactors = FALSE)
getwd()
setwd("~/Documents/github/DataScience-Day1/R 101")
dfsl <- read.csv(file="sl_products_dsdpuc.csv", header = TRUE, stringsAsFactors = FALSE)
pairs.panels(dfsl[ dfsl$product_n_ratings > 20 , c(4,5) ],bg=c("yellow","blue"),pch=21)
library(psych)
pairs.panels(dfsl[ dfsl$product_n_ratings > 20 , c(4,5) ],bg=c("yellow","blue"),pch=21)
View(dfsl)
pairs.panels(dfsl[ dfsl$product_n_ratings > 20 , c(3,4,5,6) ],bg=c("yellow","blue"),pch=21)
pairs.panels(dfsl[ dfsl$product_n_ratings > 20 , c(3,4,5,6) ],bg=c("yellow","blue"))[dfsl$product_n_ratings > 20],pch=21)
pairs.panels(dfsl[ dfsl$product_n_ratings > 20 , c(3,4,5,6) ],bg=c("yellow","blue")[dfsl$product_n_ratings > 20] , pch=21)
pairs.panels(dfsl[ dfsl$product_n_ratings > 20 , c(3,4,5,6) ],bg=c("yellow","blue")[dfsl$product_n_ratings > 20] , pch=15)
pairs.panels(dfsl[ dfsl$product_n_ratings > 20 , c(3,4,5,6) ],bg=c("yellow","blue")[dfsl$product_n_ratings > 20] , pch=5)
pairs.panels(dfsl[ dfsl$product_n_ratings > 20 , c(3,4,5,6) ],bg=c("yellow","blue")[dfsl$product_n_ratings > 20] , pch=21)
pairs.panels(dfsl[ dfsl$product_n_ratings > 20 , c(3,4,5,6) ],bg=c("yellow","blue")[ (product_n_ratings > 20) ] , pch=21)
pairs.panels(dfsl[ dfsl$product_n_ratings > 20 , c(3,4,5,6) ],bg=c("yellow","blue") , pch=21)
pairs.panels(dfsl[ dfsl$product_n_ratings > 20 , c(3,4,5,6) ],bg=c("yellow","blue") , pch=21)
pairs.panels(dfsl[ dfsl$product_n_ratings > 20 , c(3,4,5,6) ], pch='.', jiggle = TRUE)
pcats <- describeBy( dfsl[ dfsl$product_n_ratings > 10 , c(3,4,5,6) ], ,bg=c("yellow","blue")[(description_polarity > 0.3)], dfsl[ dfsl$product_n_ratings > 10 ,  ]$product_category)
pcats <- describeBy( dfsl[ dfsl$product_n_ratings > 10 , c(3,4,5,6) ], ,bg=c("yellow","blue")[(description_polarity > 0.3)], dfsl[ dfsl$product_n_ratings > 10 , c(3,4,5,6) ]$product_category)
pcats <- describeBy( dfsl[ dfsl$product_n_ratings > 10 , c(3,4,5,6) ], bg=c("yellow","blue")[(description_polarity > 0.3)], dfsl[ dfsl$product_n_ratings > 10 , c(3,4,5,6) ]$product_category)
pairs.panels(dfsl[ dfsl$product_n_ratings > 20 , c(3,4,5,6) ], pch='.', jiggle = TRUE,bg=c("yellow","blue")[(description_polarity > 0.3)])
View(dfsl)
pairs.panels(dfsl[ dfsl$product_n_ratings > 20 , c(3,4,5,6) ], pch='.', jiggle = TRUE,bg=c("yellow","blue")[(dfsl$description_polarity > 0.3)])
pairs.panels(dfsl[ dfsl$product_n_ratings > 20 , c(3,4,5,6) ], pch=21, jiggle = TRUE,bg=c("yellow","blue")[(dfsl$description_polarity > 0.3)])
pairs.panels(dfsl[ dfsl$product_n_ratings > 20 , c(3,4,5,6) ], pch=21, jiggle = TRUE)
levels(dfsl$product_category)
str(dfsl)
dfsl$product_category <- factor(dfsl$product_category)
levels(dfsl$product_category)
violinBy(dfsl[ , c(4,5) ], dfsl$product_category,grp.name=c("Animals","Art","Audio and Video","Scripts","Vehicles"),main="Density Plot by product categories")
violinBy(dfsl[ , c(4,5) ], dfsl$product_category,grp.name=c("An","Ar","AuVi","Sc","Ve"),main="Density Plot by product categories")
violinBy(dfsl[ , c(4) ], dfsl$product_category,grp.name=c("An","Ar","AuVi","Sc","Ve"),main="Density Plot by product categories")
violinBy(dfsl[ , c(5) ], dfsl$product_category,grp.name=c("An","Ar","AuVi","Sc","Ve"),main="Density Plot by product categories")
violinBy(dfsl, dfsl$product_category,grp.name=c("An","Ar","AuVi","Sc","Ve"),main="Density Plot by product categories")
violinBy(dfsl[,]$description_polarity, dfsl$product_category,grp.name=c("An","Ar","AuVi","Sc","Ve"),main="Density Plot by product categories")
violinBy(dfsl[,c(4,10)], dfsl$product_category,grp.name=c("An","Ar","AuVi","Sc","Ve"),main="Density Plot by product categories")
names(dfsl)
violinBy(dfsl[,c(4,8)], dfsl$product_category,grp.name=c("An","Ar","AuVi","Sc","Ve"),main="Density Plot by product categories")
violinBy(dfsl[,c(5,8)], dfsl$product_category,grp.name=c("An","Ar","AuVi","Sc","Ve"),main="Density Plot by product categories")
violinBy(dfsl[,c(4)], dfsl$product_category,grp.name=c("An","Ar","AuVi","Sc","Ve"),main="Density Plot by product categories")
violinBy(dfsl[ , c(4,5) ], dfsl$product_category,grp.name=c("An","Ar","AuVi","Sc","V"),main="Density Plot by product categories")
head(dfsl[ , c(4) ])
violinBy(dfsl[ , c(4) ], dfsl$product_category,grp.name=c("An","Ar","AuVi","Sc","V"),main="Density Plot by product categories")
error.bars(epi.bfi[,4:6])
error.bars(dfsl[,4:6])
error.bars.by( dfsl[,4], dfsl$product_category )
error.bars.by( dfsl[,5], dfsl$product_category )
error.bars.by( dfsl[,6], dfsl$product_category )
error.bars(dfsl[,5])
error.bars.by( dfsl[,5], dfsl$product_category )
error.bars.by( dfsl[,5], dfsl$product_category )
error.bars(dfsl[,5])
violinBy(dfsl[ , c(4) ], dfsl$product_category,grp.name=c("An","Ar","AuVi","Sc","V"),main="Density Plot by product categories")
violinBy(dfsl[ , c(4,5) ], dfsl$product_category,grp.name=c("An","Ar","AuVi","Sc","V"),main="Density Plot by product categories")
str(dfsl)
hist(dfsl[,4])
levels(dfsl$product_category)
hist(dfsl[dfsl$product_category == "Audio and Video",4])
hist(dfsl[dfsl$product_category == "Scripts",4])
t.test(dfsl[dfsl$product_category == "Audio and Video",4], dfsl[dfsl$product_category == "Audio and Video",4])
describeBy( dfsl[ dfsl$product_n_ratings > 10 , c(4,5) ], dfsl[ dfsl$product_n_ratings > 10 ,  ]$product_category)
hist(dfsl[dfsl$product_category == "Vehicles",4])
hist(dfsl[dfsl$product_category == "Scripts",4])
t.test(dfsl[dfsl$product_category == "Vehicles",4], dfsl[dfsl$product_category == "Scripts",4])
t.test(dfsl[dfsl$product_category == "Vehicles",5], dfsl[dfsl$product_category == "Scripts",5]) # rating
pairwise.t.test(dfsl$description_polarity,dfsl$product_category)
?pairwise.t.test
pairwise.t.test(dfsl$description_polarity,dfsl$product_category, p.adjust.method = "bonferroni")
pairwise.t.test(dfsl$product_avg_rating,dfsl$product_category, p.adjust.method = "bonferroni")
lm( product_avg_rating ~ product_category + description_polarity + product_price + permissions ,data=dfsl)
lm( product_avg_rating ~ product_category + description_polarity + product_price_cat + permissions ,data=dfsl)
summary(lm1)
lm1 <- lm( product_avg_rating ~ product_category + description_polarity + product_price_cat + permissions ,data=dfsl)
summary(lm1)
plot(dfsl$permissions, dfsl$product_avg_rating, xlab="permissions", ylab="avg rating", xlim=c(0,7), ylim=c(0,6), main="Permissions vs Ratings", pch=2, cex.main=1.5, frame.plot=FALSE, col=ifelse(dfsl$product_category == "Animals", "red", "blue"))
plot(dfsl$description_polarity, dfsl$product_avg_rating, xlab="permissions", ylab="avg rating", xlim=c(0,7), ylim=c(0,6), main="Permissions vs Ratings", pch=2, cex.main=1.5, frame.plot=FALSE, col=ifelse(dfsl$product_category == "Animals", "red", "blue"))
plot(dfsl$description_polarity, dfsl$product_avg_rating, xlab="permissions", ylab="avg rating", xlim=c(-1,1), ylim=c(0,6), main="Permissions vs Ratings", pch=2, cex.main=1.5, frame.plot=FALSE, col=ifelse(dfsl$product_category == "Animals", "red", "blue"))
plot(dfsl$description_polarity, dfsl$product_avg_rating, xlab="Polarity", ylab="Avg Rating", xlim=c(-1,1), ylim=c(0,6), main="Permissions vs Ratings", pch=2, cex.main=1.5, frame.plot=FALSE, col=ifelse(dfsl$product_category == "Animals", "red", "blue"))
plot(dfsl$description_polarity, dfsl$product_avg_rating, xlab="Polarity", ylab="Avg Rating", xlim=c(-1,1), ylim=c(0,6), main="Polarity vs Ratings", pch=2, cex.main=1.5, frame.plot=FALSE, col=ifelse(dfsl$product_category == "Animals", "red", "blue"))
plot(dfsl$description_polarity, dfsl$product_avg_rating, xlab="Polarity", ylab="Avg Rating", xlim=c(-1,1), ylim=c(0,6), main="Polarity vs Ratings", pch=".", cex.main=1.5, frame.plot=FALSE, col=ifelse(dfsl$product_category == "Animals", "red", "blue"))
plot( dfsl$description_polarity, dfsl$product_n_ratings, xlab="Polarity", ylab="Avg Rating", xlim=c(-1,1), ylim=c(0,6), main="Polarity vs Ratings", pch=".", cex.main=1.5, frame.plot=FALSE, col=ifelse(dfsl$product_category == "Animals", "red", "blue") )
plot( dfsl$description_polarity, dfsl$product_avg_rating, xlab="Polarity", ylab="Avg Rating", xlim=c(-1,1), ylim=c(0,6), main="Polarity vs Ratings", pch=".", cex.main=1.5, frame.plot=FALSE, col=ifelse(dfsl$product_category == "Animals", "red", "blue") )
plot( dfsl$description_polarity, dfsl$product_avg_rating, xlab="Polarity", ylab="Avg Rating", xlim=c(-1,1), ylim=c(0,5), main="Polarity vs Ratings", pch=".", cex.main=1.5, frame.plot=FALSE, col=ifelse(dfsl$product_category == "Animals", "red", "blue") )
plot( dfsl$description_polarity, dfsl$product_avg_rating, xlab="Polarity", ylab="Avg Rating", xlim=c(-1,1), ylim=c(0,5), main="Polarity vs Ratings", pch=".", cex.main=1.5, frame.plot=FALSE, col=ifelse(dfsl$product_category == "Vehicles", "red", ifelse(dfsl$product_category == "Scripts","blue","green") ) )
plot( dfsl$description_polarity, dfsl$product_avg_rating, xlab="Polarity", ylab="Avg Rating", xlim=c(-1,1), ylim=c(0,5), main="Polarity vs Ratings", pch=".", cex.main=1.5, frame.plot=FALSE, col=ifelse(dfsl$product_category == "Vehicles", "red", ifelse(dfsl$product_category == "Scripts","blue","gray") ) )
plot( dfsl$description_polarity, dfsl$product_avg_rating, xlab="Sentiment Polarity", ylab="Avg Rating", xlim=c(-1,1), ylim=c(0,5), main="Sentiment Polarity vs Ratings", pch=".", cex.main=1.5, frame.plot=FALSE, col=ifelse(dfsl$product_category == "Vehicles", "red", ifelse(dfsl$product_category == "Scripts","blue","gray") ) )
abline( product_avg_rating ~ description_polarity, data = dfsl[dfsl$product_category == "Vehicles",],col="red")
abline( lm(product_avg_rating ~ description_polarity, data = dfsl[dfsl$product_category == "Vehicles",],col="red")
abline( lm(product_avg_rating ~ description_polarity, data = dfsl[dfsl$product_category == "Vehicles",]),col="red")
plot( dfsl$description_polarity, dfsl$product_avg_rating, xlab="Sentiment Polarity", ylab="Avg Rating", xlim=c(-1,1), ylim=c(0,5), main="Sentiment Polarity vs Ratings", pch=".", cex.main=1.5, frame.plot=FALSE, col=ifelse(dfsl$product_category == "Vehicles", "red", ifelse(dfsl$product_category == "Scripts","blue","gray") ) )
lm1<-lm(product_avg_rating ~ description_polarity, data = dfsl[dfsl$product_category == "Vehicles",])
abline(lm1 ,col="red")
lm2( product_avg_rating ~ description_polarity, data = dfsl[dfsl$product_category == "Scripts",])
lm2 <- lm( product_avg_rating ~ description_polarity, data = dfsl[dfsl$product_category == "Scripts",])
abline(lm2 ,col="blue")
plot( dfsl$description_polarity, dfsl$product_avg_rating, xlab="Sentiment Polarity", ylab="Avg Rating", xlim=c(-1,1), ylim=c(0,5), main="Sentiment Polarity vs Ratings", pch=21, cex.main=1.5, frame.plot=FALSE, col=ifelse(dfsl$product_category == "Vehicles", "red", ifelse(dfsl$product_category == "Scripts","blue","gray") ) )
lm1<-lm(product_avg_rating ~ description_polarity, data = dfsl[dfsl$product_category == "Vehicles",])
abline(lm1 ,col="red")
lm2 <- lm( product_avg_rating ~ description_polarity, data = dfsl[dfsl$product_category == "Scripts",])
abline(lm2 ,col="blue")
plot( dfsl$description_polarity, dfsl$product_avg_rating, xlab="Sentiment Polarity", ylab="Avg Rating", xlim=c(-1,1), ylim=c(0,5), main="Sentiment Polarity vs Ratings", pch=".", cex.main=1.5, frame.plot=FALSE, col=ifelse(dfsl$product_category == "Vehicles", "red", ifelse(dfsl$product_category == "Scripts","blue","gray") ) )
lm1<-lm(product_avg_rating ~ description_polarity, data = dfsl[dfsl$product_category == "Vehicles",])
abline(lm1 ,col="red")
lm2 <- lm( product_avg_rating ~ description_polarity, data = dfsl[dfsl$product_category == "Scripts",])
abline(lm2 ,col="blue")
dfsl <- read.csv(file="sl_products_dsdpuc.csv", header = TRUE, stringsAsFactors = FALSE)
View(dfsl)
sessionInfo()
getwd() # if necessary setwd() setwd("~/Documents/github/DataScience-Day1/R 101")
names(dfsl)
str(dfsl)
summary(dfsl)
library(psych)
describe(dfsl)
dfsl$product_category <- factor(dfsl$product_category)
str(dfsl)
violinBy(dfsl[ , c(4,5) ], dfsl$product_category,grp.name=c("An","Ar","AuVi","Sc","V"),main="Density Plot by product categories")
hist(dfsl[,4])
t.test(dfsl[dfsl$product_category == "Vehicles",4], dfsl[dfsl$product_category == "Scripts",4]) # polarity
View(dfsl)
